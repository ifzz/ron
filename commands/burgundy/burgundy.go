package burgundy

import (
	"fmt"
	"io"
)

const (
	ron = `
                              ,,▄▄▓▄▄▄▄,,,,
                       ,,▄╣▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▄▄,
                  ╓▄▄▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▄▄
               ▄▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▄╕
             ▄▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▄
           ╗▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓╕
          ╣▓▓▓▓▓▓▓▓▓▒Θ░░╣▒▒▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▒▓▓▓▓▓▓▓▓▓▓▄
         ╣▓▓▓▓▓▓▓█Θ▒╣╣▒▒▓▓▓▓▓▓▓▓▓██████ΘΘΘΘ░δΘ▒▓▓▒╣▓▓▓▓▓▓▓▓▓▄
        ╢▓▓▓▓▓▓▓▒╣╣╣▒▓▓▓▓█▀▀╨░ . ░ ░░░░░░░░░░╢╢╣╣▒▒▒▓▓▓▓▓▓▓▓▓▄
       ╥▓▓▓▓▓▓▓▓▓▒ΘΘΘΘ░░░░           ░░░░░░░░░░╢╣░╢▒▓▓▓▓▓▓▓▓▓▓Q
       ╫▓▓▓▓▒╣▓▓█░░░░░░               ░░░░░░░░░░░░░╢▓▓▓▓▓▓▓▓▓▓▓╕
       ╫▓▓▓▒╣▓▓█ ░░                  ░░░░░░░░░░░░░░╬▓▓▓▓▓▓▓▓▓▓▓▓
       ╫▒▒▒▒▒▓▓∩                   ░░░░░░░░░░░░░░░░░╫▓▓▓▓▓▓▓▓▓▓▓▌
       ║▒▒▒╬▓▓▓                   ░░░░░░░░░░░░░░╣╢╣╣╢▓▓▓▓▓▓▓▓▓▓▓▓▄
       ╠▒▓▓▓▓▓▓░                    ░░░░░░░░░░░╣╣╣╣╣╣▒▓▓▓▓▓▓▓▓▓▓▓▓
       ╠▒▓▓▓▓▓▓▌                      ⌐░░░╣╣▓▓▓▓▓▓▓▒▒╣▓▓▓▓▓▓▓▓▓▓▓▓▌
       ╙▒▒▓▓▓▓▓▓ |            ░░ ⌐░░░░╣╣▒▓▓▓▓▓▓▓▓▓▓▓▒▒▒▓▓▓▓▓▓▓▓▓▓▓Θ
        ░▒▒▒▓▓▓▓░  ⌐╔░╣╣╣╣╣╣╣╣░░░░░░╣▓▓▓▓██▓▒░▒▓▒▒Θ▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓
         ▓▓╣▒▓▓▓⌐ ░▒▒╣▒▓▓▓▓▓█▒╣░  ░░▒▓▒▓░╖░ΘΘ╣▒Θ░╢╣░╢▒▒▒▓▓▓▓▓▓▓▓▓⌐
         ╫▓▓▓▓▓▓░ ░░░ÑΘ░░ΘΘ░░░░░⌐ ░░╫▒░░░░░░░░░░░░░╢╢▒▒▒▓▓▓▓▓▓▓▓▓
         ╚▓▓▓▓▓▓░⌐     ░░░░░   ░  ░╢╣╣░░░░░░░░░░░░░░╢▒▒╣▓▓▓▓▓▓▓▓▓
          '█▓▓▓▓░⌐             ░  ░╢╣╣╣░░░░░░░░░░░░╢╣▒▒▒▓▓▓▓▓▓▓▓▓╕
             '▀▓▓░⌐           ░░  ░░╢╣▒╣░░░░░░░░░░╢╣▒▒▒▓▓▓▓▓▓▓▓▓▓░
                ▒░░⌐         ░░   "░╢╣╣Θ▒╣░░░░░░░╢╣▒▒▒▒▓▓▓▓▓▓▓▓▓▀
                 ░░░⌐    -░░░░╓⌐  -░╣╣╣╣▒▒░░░░░░╢╣▒▒▒▒▓▓▓▓▓▓▓▓█'
                  ░░░⌐ ⌐░░░░  ░░░╢╣▒▓▓▒δ░░░╣░░░░╢╣▒▒▒▒▓▓▓▓▓▓▓▀
                   ░░░░░╢Θ ╓░╣▓▒╣▓▓▒▒▓▓▓▓▓▓▓╣╣╣░░╢╣╣▒▓▓▓▓▓▓█
                   ░░░░░╢╥╣▒▓▓▒▓▓▓▒▒▒█▒▓▓▓▓▓▓▓▓▓▓╣╣▓▓▓▓▓▓▓█
                    ░░░░▓▓▓▓▓Θ╜''    ░░░╣╣▓▓▓▓▓▓▒▒▒▓▓▓▓▓Γ
                     ░░░░Θδ░░░░╣╣▒▒▒▒▒▓▓▓▓▓▒╣╣╣╣▒▒▓▓▓▓▓▓
                      "╢░░░░░░░░░░░░░░░░Θ▒░░░╢╣▒▓▓▓▓▓▓▓░
                       ╠╫░░░░░░░░░░░░░░░╣╢╣╣░╢╣▓▓▓▓▓▓▓▓
                      -░░░╢░░░░░░░░░░░╣╣╣╣╣╣╬╣▓▓▓▓▓▓▓▓▓▌
                       ╙░░░╢░╣░░░░░░╣╢╣╣╣▒▒╣▓▓▓▓▓▓▓▓▓▒╣▒▓
                   ╥╣    ╙░░░░╢╣╣╣╣╣▒▒▒▒▓▓▓▓▓▓▓▓▓▓▓Θ░╣╣╣▓▓▄
                 ╓╣▓⌐       ░░░░╢▒▒▒▒▓▓▓▓▓▒▒▒▒▒▒Θ░░░░╢╣╣╣▓▓▓▄
               ╓▒▓▓▒          "ò░░░╢╢Θ▒ΘΘΘδ╢╣▒δ░░░░░░░╢╣╣▓▓▓▓▓▄╦
            ╖╣▓▓▒▒▓Θ             ╚░░░░░░░░░δ╨ ░░░░░░░░╢╣╣▓▓▓▓▓▓▓▓▓▓▄▄▄-µ
       ,╥▄▓▓▓▓▒▒▒▒▓░               "░░░░░╨       ░░░░░╢╢▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▄▄
  .╗▄▓▓▓▓▓▓▓▓▓▓▒▒▓▓░                  ╙'          ░░░░╢╣▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓▓

`
)

// Command ...
type Command struct {
	W    io.Writer
	WErr io.Writer
}

// Run ...
func (c *Command) Run(args []string) (int, error) {
	fmt.Fprintf(c.W, ron)
	return 0, nil
}

// Names are the aliases and name for the command. For instance
// a command can have a long form and short form.
func (c *Command) Names() map[string]struct{} {
	return map[string]struct{}{
		"burgundy": struct{}{},
	}
}

// Description is what is printed in Usage.
func (c *Command) Description() string {
	return "Stay classy."
}
